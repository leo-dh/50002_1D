module boolean (
    input a[16],
    input b[16],
    input alufn[6],
    
    output boole[16]
  ) {
    
  always {
     case (alufn[3:0]){
      b1000: // AND
        boole = a & b;
      b1110: // OR 
        boole = a | b;
      b0110: // XOR
        boole = a ^ b;
      b1010: // A
        boole = a;
      b0111: // NAND
        boole = ~(a & b);
      b0001: // NOR
        boole = ~(a | b);
      b1001: // XNOR
        boole = ~(a ^ b);
      b0101: // B
        boole = b;
      default:
        boole = 16b0;      
    }
  }
}
