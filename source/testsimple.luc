module testsimple (
    input clk,  // clock
    input rst,  // reset
    
    input buttonadd,
    input buttonsub,
    input buttonmul,
    input buttondiv,
    input buttona,
    input buttonb,
    input buttonc,
    input aluout[16],
    
    output motherpos[16],
    output billypos[16],
    output a_out[16],
    output b_out[16],
    output c_out[16],
    output d_out[16],
    output operator_sig[6],
    output gameend,
    output alua[16],
    output alub[16],
    output alualufn[6]
    
  ) {
  .clk (clk){
    .rst (rst){
      fsm state = {IDLE,COUNTDOWN,GEN_QN,WAITINPUT,CHECKINPUT,CHECKINPUT2,CHECKMOTHERPOS,CHECKBILLYPOS,LOSE,WIN};
      dff timer[28];
      dff counter[2];
      dff questioncounter[6];
      mother mother;
      billy billy;
      registers a(#BITS(16));
      registers b(#BITS(16));
      registers c(#BITS(16));
      registers temp(#BITS(16));
      registers operator(#BITS(6));
      registers divoutput(#BITS(16));
      
    }
  }
  generatequestion_simple questiongenerator;
  
  
  sig buttoninput[4];
  
  const ADD = 6b000000;
  const SUB = 6b000001;
  const MUL = 6b000010;
  const DIV = 6b100010;
  const CMPEQ = 6b110011;
  const WINCON = d63;
  
  always {
    gameend = 0;
    timer.d = timer.q + 1;
    questioncounter.d = questioncounter.q;
    
    questiongenerator.randomnumber = questioncounter.q;
    
    divoutput.writevalue = a.readvalue/b.readvalue;
    divoutput.writeenable = 1;
    
    alualufn = 6b0;
    alua = 16b0;
    alub = 16b0;
    
    mother.difficulty = b11;
    
    motherpos = mother.pos;
    billypos = (billy.pos - d2) - (billy.pos - d2)/7 * 7;
    a_out = d20;
    b_out = a.readvalue;
    c_out = b.readvalue;
    d_out = c.readvalue;
    
    mother.writeenable = 0;
    billy.writeenable = 0;
    a.writeenable = 0;
    b.writeenable = 0;
    c.writeenable = 0;
    temp.writeenable = 0;
    
    mother.writevalue = mother.pos;
    billy.writevalue = billy.pos;
    a.writevalue = questiongenerator.a;
    b.writevalue = questiongenerator.b;
    c.writevalue = questiongenerator.c;
    temp.writevalue = 0;
    
    operator_sig = operator.readvalue;
    operator.writeenable = 1;
    operator.writevalue = 6b111111;
    
    counter.d = counter.q;
    
    if (buttonb){
      mother.writeenable = 1;
      mother.writevalue = mother.pos + 1;
    }
    if (buttonc){
      state.d = state.IDLE;
      gameend = 1;
    }
    
    buttoninput = c{buttondiv, buttonmul, buttonsub, buttonadd};
    
    case (state.q){
      state.IDLE:
        mother.writeenable = 1;
        mother.writevalue = d0;
        operator.writeenable = 1;
        operator.writevalue = 6b111111;
        billy.writeenable = 1;
        billy.writevalue = d2; // billy position offset
        if (buttonadd == 1){
          state.d = state.COUNTDOWN;
          
        }
        
      state.COUNTDOWN:
        a_out = d14;
        b_out = d11;
        c_out = d5;
        d_out = d14;
      
        if (buttona){
          state.d = state.GEN_QN;
        }
      
      
      state.GEN_QN:
        questioncounter.d = questioncounter.q + 1;
        a.writeenable = 1;
        b.writeenable = 1;
        c.writeenable = 1;
        temp.writeenable = 1;
        state.d = state.WAITINPUT;
      
      
      state.WAITINPUT:
        if (mother.pos == billy.pos){
          state.d = state.CHECKMOTHERPOS;
        }
        if (^buttoninput){
          operator.writeenable = 1;
          case (buttoninput){
            
            b0001:
              operator.writevalue = ADD;
            
            b0010:
              operator.writevalue = SUB;
            
            b0100:
              operator.writevalue = MUL;
            
            b1000:
              operator.writevalue = DIV;
          }
          timer.d = 0;
          state.d = state.CHECKINPUT;
        }
      
      state.CHECKINPUT:
        alua = a.readvalue;
        alub = b.readvalue;
        alualufn = operator.readvalue;
        temp.writeenable = 1;
        case (operator.readvalue){
          DIV:
            temp.writevalue = divoutput.readvalue;
          
          default:
            temp.writevalue = aluout;
        }
        state.d = state.CHECKINPUT2;
      
      state.CHECKINPUT2:
        alualufn = CMPEQ;
        alua = temp.readvalue;
        alub = c.readvalue;
        if (aluout == 1){
          state.d = state.CHECKBILLYPOS;
        }
        else{
          state.d = state.CHECKMOTHERPOS;
        }
      
      
      state.CHECKBILLYPOS:
        timer.d = 0;
        mother.writeenable = 1;
        billy.writeenable = 1;
        billy.writevalue = billy.pos + 1;
        if (billy.pos == WINCON){
          state.d = state.WIN;
        }
        else{
          state.d = state.GEN_QN;
        }
      
      state.CHECKMOTHERPOS:
        mother.writeenable = 1;
        operator.writeenable = 1;
        operator.writevalue = 6b111111;
        if (mother.pos == billy.pos){
          state.d = state.LOSE;
        }
        else{
          state.d = state.WAITINPUT;
        }
      
      state.WIN:
        timer.d = timer.q + 1;
        mother.writeenable = 1;
        a_out = d12;
        b_out = d13;
        c_out = d5;
        d_out = d5;
        
        // do something
        if (timer.q == d100000000){
          gameend = 1;
          state.d = state.IDLE;
        }
      
      state.LOSE:
        timer.d = timer.q + 1;
        mother.writeenable = 1;
        a_out = d10;
        b_out = d0;
        c_out = d5;
        d_out = d11;
        
        // do something
        if (timer.q == d100000000){
          gameend = 1;
          state.d = state.IDLE;
        }
      
      
      
      
    }
    
    
    
  }
}